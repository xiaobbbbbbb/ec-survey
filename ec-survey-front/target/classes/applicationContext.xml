<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:jee="http://www.springframework.org/schema/jee" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd  
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd 	
	http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd 
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd ">

	<!-- 开启注解 -->
	<context:annotation-config />
	<!-- 自动扫描 -->
	<context:component-scan base-package="com.ecarinfo.*" />
	<!-- 启动 AspectJ 支持 -->
	<aop:aspectj-autoproxy />

	<!-- 加载配置文件 -->
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:datasource.properties</value>
			</list>
		</property>
	</bean>

	<!-- druid 数据源 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />

		<property name="filters" value="stat,log4j" />

		<property name="maxActive" value="20" />
		<property name="initialSize" value="1" />
		<property name="maxWait" value="60000" />
		<property name="minIdle" value="1" />

		<property name="timeBetweenEvictionRunsMillis" value="3000" />
		<property name="minEvictableIdleTimeMillis" value="300000" />

		<property name="validationQuery" value="SELECT 'x'" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />

	</bean>

	<!-- 慢SQL记录 -->
	<bean id="stat-filter" class="com.alibaba.druid.filter.stat.StatFilter">
		<property name="slowSqlMillis" value="3000" />
		<property name="logSlowSql" value="true" />
	</bean>

	<!-- mybatis 核心配置 start -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 自动扫描entity目录, 省掉Configuration.xml里的手工配置,多个包时用';'号分隔 -->
		<property name="typeAliasesPackage" value="com.ecarinfo.survey.po;com.ecarinfo.ralasafe.po" />
		<!-- 显式指定Mapper文件位置 -->
		<property name="mapperLocations" value="classpath*:persist/**/*.xml" />
	</bean>

	<!-- 自动扫包 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.ecarinfo.**.dao" />
	</bean>
	<!-- mybatis 核心配置 end -->

	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<!-- 日志切面 -->
	<aop:aspectj-autoproxy />
	<bean id="logAspect" class="com.ecarinfo.log.LogAspect" />
	<aop:config>
		<aop:aspect ref="logAspect">
			<aop:pointcut id="logPointCut" expression="execution(* com.ecarinfo.*.controller.*.*(..))" />
			<aop:around pointcut-ref="logPointCut" method="doSystemLog" />
		</aop:aspect>
	</aop:config>

	<!-- 定义事务通知 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<!-- 定义方法的过滤规则 -->
		<tx:attributes>
			<!-- 所有方法都使用事务 -->
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<!-- 定义所有get开头的方法都是只读的 -->
			<tx:method name="find*" read-only="true" />
		</tx:attributes>
	</tx:advice>

	<!-- 定义AOP配置 -->
	<aop:config>
		<!-- 定义一个切入点 -->
		<aop:pointcut id="services" expression="execution(* com.ecarinfo.*.service.impl.*.*(..))" />
		<!-- 对切入点和事务的通知，进行适配 -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="services" />
	</aop:config>

	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>

	<!-- 处理接收到数据的线程池 -->
	<bean id="threadPoolTaskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="5" />
		<property name="maxPoolSize" value="10" />
		<property name="keepAliveSeconds" value="5000" />
		<property name="queueCapacity" value="10000" />
	</bean>

	<!-- 处理接收到数据的线程池 -->
	<bean id="fiveServiceThreadPool" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="5" />
		<property name="maxPoolSize" value="10" />
		<property name="keepAliveSeconds" value="5000" />
		<property name="queueCapacity" value="10000" />
	</bean>

	<!-- 主程序入口 -->
	<!-- <bean id="application" class="com.ecarinfo.survey.main.Application" init-method="run">
		<property name="serverPipelineFactory" ref="serverPipelineFactory" />
		<property name="httpPipelineFactory" ref="httpPipelineFactory" />
		<property name="threadPoolTaskExecutor" ref="threadPoolTaskExecutor" />
		<property name="ecOnlineManager" ref="ecOnlineManager" />
	</bean> -->

	<!-- <import resource="dubbo-consumer.xml"/> -->
	<import resource="quartz.xml"/>

	<!-- 权限配置 -->
	<import resource="classpath:/spring-shiro.xml" />

	<!-- 缓存配置 -->
	<import resource="classpath:/spring-ehcache.xml" />

</beans>